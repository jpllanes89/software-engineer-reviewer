1-1=Create an Optional<Language> object for Spanish Language: id = 5, name = "Spanish", numberOfSpeakers = 548000000
Optional<Language> maybeSpanish = Optional.of(new Language.LanguageBuilder().setId("5").setName("Spanish").setNumberOfSpeakers(548000000).build()); 
1-2=Create an Optional<Language> object for French Language: id = 5, name = "French", numberOfSpeakers = 280000000
Optional<Language> maybeFrench = Optional.of(new Language.LanguageBuilder().setId("5").setName("French").setNumberOfSpeakers(280000000).build()); 
2-1=Using stream, print out the language with values from languageList
languageList.stream().forEach(n -> n.ifPresent(System.out::println));
3-1=Create a new list of languages and copy the values from the pre-generated languageList. replace the null language with Russian Language: id = 6, name = "Russian", numberOfSpeaker = 258200000. You can use Java 9's ifPresentOrElse
    List<Optional<Language>> languageList3 = new ArrayList<>();
    languageList.stream().forEach(n -> {

	    Language maybeLanguage = n.orElse(new Language.LanguageBuilder().setId("6").setName("Russian").setNumberOfSpeakers(258200000).build());
	    languageList3.add(Optional.of(maybeLanguage));
    });

    languageList.stream().forEach(n ->
	    n.ifPresentOrElse(o -> languageList3.add(Optional.of(o)),
		    () -> languageList3.add(Optional.of(new Language.LanguageBuilder().setId("6").setName("Russian").setNumberOfSpeakers(258200000).build()))));

3-2=Create a new list of languages and copy the values from the pre-generated languageList. replace the null language with Russian Language: id = 6, name = "Portuguese", numberOfSpeaker = 257000000. You can use Java 8's orElse or Java 9's ifPresentOrElse
    List<Optional<Language>> languageList3 = new ArrayList<>();
    languageList.stream().forEach(n -> {

	    Language maybeLanguage = n.orElse(new Language.LanguageBuilder().setId("6").setName("Russian").setNumberOfSpeakers(258200000).build());
	    languageList3.add(Optional.of(maybeLanguage));
    });

    languageList.stream().forEach(n ->
	    n.ifPresentOrElse(o -> languageList3.add(Optional.of(o)),
		    () -> languageList3.add(Optional.of(new Language.LanguageBuilder().setId("6").setName("Russian").setNumberOfSpeakers(258200000).build()))));

4-1=Iterate on the languageList and when encountering a null language, throw IllegalStateException
    languageList.stream().forEach(n -> n.orElseThrow(IllegalArgumentException::new));
5-1=Iterate on the languageList and print out languages with more than 700,000,000 speakers. Message printed should be: <language-name> has more than 700,000,000 speakers
languageList.stream().forEach(o -> o.filter(lang -> 700000000 < lang.getNumberOfSpeakers()).ifPresent(e -> System.out.println(e.getName() + " has more than 700,000,000 speakers")));
5-2=Iterate on the languageList and print out languages with less than 1,000,000,000 speakers. Message printed should be: <language-name> has less than 1,000,000,000 speakers
languageList.stream().forEach(o -> o.filter(lang -> 1000000000 > lang.getNumberOfSpeakers()).ifPresent(e -> System.out.println(e.getName() + " has less than 1,000,000,000 speakers")));
6-1=Create a list of country with languages speakers more than 500,000
List<Country> countryList = new ArrayList<>();
languageList.stream().forEach(o -> o.filter(lang -> 500000 < lang.getNumberOfSpeakers()).map(Language::getCountry).ifPresent(e -> countryList.add(e)));
6-2=Create a list of country with languages speakers less than 800,000

