1-1=Create an appendTitle UnaryOperator that will add "TITLE: " to a string. For each title of book, apply the UnaryOperator and print the output: TITLE: <title>
1-2=Create an appendCategory UnaryOperator that will add "CATEGORY: " to a string. For each category of book, apply the UnaryOperator and print the output: CATEGORY: <category>
1-3=Create an appendAuthor UnaryOperator that will add "AUTHOR: " to a string. For each author of book, apply the UnaryOperator and print the output: AUTHOR: <author>
2-1=Create a createHeaderByTitleAndGenre BinaryOperator that will take the title and genre as parameter and will return "<title>: <genre>"
2-2=Create a createHeaderByTitleAndCategory BinaryOperator that will take the title and category as parameter and will return "<title>: <category>" 
3-1=Create a toPhpPrice Function that will take price as parameter and will return a String "Php <price>"
3-2=Create a toNumberOfPages Function that will take numberOfpages parameter an will return a String "No. of Pages: <numberOfPages>"
4-1=Create a createHeaderByTitleAndPages that will take title and numberOfPages as parameters and will return a String "<title>: <numberOfPages>"
4-2=Create a createHeaderByTitleAndPrice that will take title an price as parameters and will return a String "<title>: <price>"
5-1=Create two UnaryOperators. The first will be an encapsulateTitle which accepts a title parameter and returns "[<title>]". The Second will be an createFormattedTitle which accepts the result of the UnaryOperator then returns "TITLE: [<title>]"
5-2=Create two UnaryOperators. The first will be an encapsulateTitle which accepts the result of the second UnaryOperator then returns "[TITLE: <title>]". The Second will be an createFormattedTitle which accepts a title parameter and returns "TITLE: <title>"
6-1=Create a printTitle Consumer which accepts a title parameter and prints "Title=<title>"
6-2=Create a printCategory Consumer which accepts a category parameter and prints "Category=<category>"
6-3=Create a printAuthor Consumer which accepts a author parameter and prints "Author=<author>"
7-1=Create two Consumers. The first will be a printGenre which accepts a genre and prints "Genre=<genre>". The second will be a printFormattedGenre which accepts the result of the first genre and prints "[<genre>]" 
8-1=Create a generateGreetings which return a String "Hello, I am a Supplier" and print it.
8-2=Create a generateRandomPageNumber which returns an Integer <random-number> and print it.
9-1=Create an isEvenNumber which accepts an Integer and returns true if the number is even.
9-2=Create an isOddNumber which accepts an Integer and returns true if the number id odd.
10-1=Create an doesBookContainEvenNumberOfPages which accepts a Book and returns true if the number of pages is even.
10-1=Create an doesBookContainOddNumberOfPages which accepts a Book and returns true if the number of pages is odd.
11-1=Create a hasTheSameCategory which accepts two books and returns true if both books has same category
